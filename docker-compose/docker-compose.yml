x-logging: &default-logging
  driver: loki
  options:
    loki-url: "http://loki:3100/api/prom/push"
    no-file: "false"
    keep-file: "true"
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: "3"

services:
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mongodb/database:/data/db
    ports:
      - 27017:27017
    restart: "unless-stopped"
    logging: *default-logging

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass redis1234
    ports:
      - "6379:6379"
    logging: *default-logging

  rabbit-mq:
    image: rabbitmq:latest
    ports:
      - 5672:5672
      - 15672:15672
    logging: *default-logging

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    logging: *default-logging

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    logging: *default-logging

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus:latest
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    extra_hosts: [ "host.docker.internal:host-gateway" ]
    logging: *default-logging

  tempo:
    image: grafana/tempo:latest
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - loki
    logging: *default-logging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    hostname: cadvisor
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    ports:
      - "8080:8080"
    logging: *default-logging

  node-exporter:
    image: prom/node-exporter
    ports:
      - 9100:9100
    logging: *default-logging

  # spring-admin:
  #   image: michayaak/spring-boot-admin:2.2.3-1
  #   ports:
  #     - '8081:8080'
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.spring.rule=Host(`spring.localhost`)"
  #     - "traefik.http.services.spring.loadbalancer.server.port=8080"
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   logging: *default-logging
